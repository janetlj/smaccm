package array
public
	with Base_Types;
	with Data_Model;

	data struct_with_array
	end struct_with_array;
	
	data implementation struct_with_array.i
		subcomponents
			array : data Base_Types::Integer[4];
	end struct_with_array.i;
	
	data array_type
		properties
			Data_Model::Data_Representation => Array;
			Data_Model::Base_Type => (classifier (Base_Types::Integer));
			Data_Model::Dimension => (4);
	end array_type;
	
	annex agree {**
--		-- Type Error: cannot assign structure to interger literal
--		fun array_test0(t : array::struct_with_array.i) : bool =
--			t = 10;
--			
--		-- Type Error: cannot assign array to interger literal
--		fun array_test1(t : array::struct_with_array.i) : bool =
--			t.array = 10;
		
		-- Correct: assign interger array element to integer literal
		fun array_test2(t : array::struct_with_array.i) : bool =
			t.array[0] = 10;
			
--		fun array_test3(t : array::array_type) : bool = 
--			t.array[2] = 10;
--	
--	
--fun array_test4(t : array::array_type) : bool =
--forall i in indices(t), t[i] < 10;
			
	**};
	
	
end array;